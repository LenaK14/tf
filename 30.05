1) import itertools
digits = ['A','B','C']
for item in itertools.combinations(digits,3):
    print(item)
2) import itertools
somelists = [
    ['A', 'B', 'C'],
    ['X', 'Y', 'Z'],
    ]
for item in itertools.product(*somelists):
    print(item)
3)import itertools
a = ['A', 'B']
b = ['X', 'Y']
c = ['1','2']
print(list(itertools.product(a,b,c)))
5)import itertools
if __name__=='__main__':
    nums = ['A','B','C']
    a = list(itertools.permutations(nums))
    print(a)
7)import itertools
a = 'abc'
s = itertools.permutations(a)
print(s)perm = list(itertools.product(lst,repeat=len(lst)))
print(perm)
8)import itertools
def pythagorean_troyki(max_val):
    for a, b, c in itertools.product(range(1, max_val), repeat=3):
        if a**2+b**2==c**2:import ctypes
def check_library(library_name):
    try;
    ctypes.cdll.LoadLibrary(library_name)
    print(f"{library_name} is installed.")
    except OSError:
        print(f"{library_name} is not installed.")
            yield(a,b,c)
max_val=20
for troyki in pythagorean_troyki(max_val):
    print(troyki)
4)import itertools
lst = ['A','B','C']
perm = list(itertools.product(lst,repeat=len(lst)))
print(perm)
dkr
import ctypes
def check_library(library_name):
    try;
    ctypes.cdll.LoadLibrary(library_name)
    print(f"{library_name} is installed.")
    except OSError:
        print(f"{library_name} is not installed.")

    
